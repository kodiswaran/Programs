package com.test.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class MainClassPermutation {

    final static List<List<Integer>> permutations = new ArrayList<List<Integer>>();

    private static void perm( final int basePosition, final int[] arr ) {

        if ( basePosition == arr.length ) {
            MainClassPermutation.permutations.add(
                Arrays.stream(arr)
                    .boxed()
                    .collect(Collectors.toList())
            );
            return;
        }

        for ( int i = basePosition; i < arr.length; ++i ) {
            MainClassPermutation.swap(arr, basePosition, i);
            MainClassPermutation.perm(basePosition + 1, arr);
            MainClassPermutation.swap(arr, basePosition, i);
        }
    }

    private static void swap( final int[] arr, final int index1, final int index2 ) {
        final int temp = arr[index1];
        arr[index1] = arr[index2];
        arr[index2] = temp;
    }

    public static void main( final String[] args ) {
        MainClassPermutation.perm(0, new int[]{1, 2, 3});
        System.out.println(MainClassPermutation.permutations);
    }
}
